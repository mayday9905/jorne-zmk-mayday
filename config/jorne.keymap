/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define RSE 2
#define CODE 3
#define CDE_S 4
#define GM 5
#define GM_S 6
#define ADJ 7


/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
          &kp LWIN &kp GRAVE  &kp Q &kp W &kp E &kp R &kp T               &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT &mt RWIN RBKT
                   &kp LSHFT  &kp A &kp S &kp D &kp F &kp G               &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
                   &kp LCTRL  &kp Z &kp X &kp C &kp V &kp B               &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                         &lt RSE TAB &kp LALT &lt LWR ENTER               &lt LWR SPACE &mt RSHFT BSPC &lt RSE DEL
                        >;
                };
                lower_layer {
                        bindings = <
          &kp LWIN &kp BSPC          &kp SLASH &kp N7 &kp N8 &kp N9 &kp MINUS             &kp C_VOL_UP &kp U       &kp C_PAUSE  &kp O       &kp P    &kp LBKT &mt RWIN RBKT
                   &mt LSHIFT EQUAL  &kp STAR  &kp N4 &kp N5 &kp N6 &kp PLUS              &kp C_MUTE   &kp C_PREV  &kp C_PLAY   &kp C_NEXT  &kp SEMI &mt RCTRL SQT
                   &kp LCTRL         &kp N0    &kp N1 &kp N2 &kp N3 &kp DOT               &kp C_VOL_DN &kp M       &kp COMMA    &kp DOT     &kp FSLH &kp BSLH
                                         &lt ADJ TAB &kp LALT &trans                      &trans &mt RSHFT BSPC &lt ADJ DEL
                        >;
                };
                raise_layer {
                        bindings = <
          &trans &kp UNDER      &kp F1   &kp F2 &kp F3   &kp F4   &kp F5           &kp F6    &kp F7   &kp F8   &kp F9   &kp F10  &kp F11 &mt RGUI F12
                &mt LCTRL PLUS &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT         &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &mt RCTRL MINUS
                &mt LALT EQUAL &kp N1   &kp N2 &kp N3   &kp N4   &kp N5            &kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &trans
                                              &trans &trans &lt ADJ TAB            &lt ADJ DEL &trans &trans
                        >;
                };
                code_layer {
                        bindings = <
          &kp LWIN &kp GRAVE &kp Q &kp W &kp E &kp R &kp T              &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT &kp RBKT
                   &kp LSHFT &kp A &kp S &kp D &kp F &kp G              &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                   &kp LCTRL &kp Z &kp X &kp C &kp V &kp B              &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                          &kp DOWN   &kp UP    &lt LWR ENTER            &lt CDE_S SPACE &kp LEFT &kp RIGHT
                        >;
                };
                code_secondary_layer {
                        bindings = <
          &kp LWIN &kp LWIN(GRAVE)   &kp F1 &kp F2    &kp F3    &kp F4    &kp F5          &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT &kp RBKT
                   &kp LSHFT         &kp F6 &kp F7    &kp F8    &kp F9    &kp F10         &kp H &kp J  &kp K     &kp L   &kp SEMI &kp SQT
                   &kp LCTRL         &kp Z  &kp LBRC  &kp RBRC  &kp LPAR  &kp RPAR        &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                                          &kp LA(SHIFT) &kp LA(TAB) &lt LWR ENTER         &lt CDE_S SPACE &kp LEFT &kp RIGHT
                        >;
                };
                        gm_layer {
                        bindings = <
          &kp LWIN &lt GM_S GRAVE  &kp Q &kp W &kp E &kp R &kp T               &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT &mt RWIN RBKT
                   &kp LSHFT       &kp A &kp S &kp D &kp F &kp G               &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
                   &kp LCTRL       &kp Z &kp X &kp C &kp V &kp B               &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                             &lt RSE TAB &kp LALT &lt LWR ENTER                &lt LWR SPACE &mt RSHFT BSPC &lt RSE DEL
                        >;
                };
                        gm_secondary_layer {
                        bindings = <
          &kp LWIN &kp GRAVE  &kp N1 &kp W &kp N2 &kp N3 &kp N4               &kp Y &kp U  &kp I     &kp O   &kp P    &kp LBKT &mt RWIN RBKT
                   &kp LSHFT  &kp A  &kp S &kp D  &kp F  &kp G                &kp H &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
                   &kp LCTRL  &kp Z &kp X &kp C &kp V &kp B                   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                         &lt RSE TAB &kp LALT &lt LWR ENTER                   &lt LWR SPACE &mt RSHFT BSPC &lt RSE DEL
                        >;
                };
                        adjust_layer {
                        bindings = <
          &reset &bootloader &rgb_ug RGB_TOG  &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_HUD &rgb_ug RGB_SAI                  &out OUT_TOG &out OUT_BLE  &out OUT_USB      &none   &none    &bootloader &reset
                   &none     &rgb_ug RGB_SAD  &rgb_ug RGB_BRI &rgb_ug RGB_BRD &rgb_ug RGB_SPI &rgb_ug RGB_SPD                  &bt BT_SEL 4 &bt BT_SEL 3  &bt BT_SEL 2      &bt BT_SEL 1      &bt BT_SEL 0     &bt BT_CLR
                   &none     &none            &to DEF         &to CODE        &to GM          &none                            &none &to GM &to CODE      &to DEF           &none             &none
                                                 &trans &trans &trans                                                                                         &trans &trans &trans   
                        >;
                };
        };
};
