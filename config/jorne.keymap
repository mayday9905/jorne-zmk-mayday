/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

#define DEF 0
#define LWR 1
#define GM 2
#define GM_A 3
#define CODE 4
#define RSE 5
#define ADJ 6

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
                        bindings = <
   &kp LWIN &kp GRAVE &kp Q &kp W &kp E &kp R &kp T &kp Y         &kp U  &kp I     &kp O   &kp P    &kp LBKT &mt RWIN RBKT
            &kp LSHFT &kp A &kp S &kp D &kp F &kp G &kp H         &kp J  &kp K     &kp L   &kp SEMI &mt RCTRL SQT
            &kp LCTRL &kp Z &kp X &kp C &kp V &kp B &kp N         &kp M  &kp COMMA &kp DOT &kp FSLH &kp BSLH
                         &lt RSE TAB &mt LSHFT SPACE &lt LWR RET &lt LWR ESC &mt RSHFT BSPC &lt RSE DEL
                        >;
                };
                lower_layer {
                        bindings = <
   &trans &kp UNDER      &kp F1   &kp F2 &kp F3   &kp F4   &kp F5           &kp F6    &kp F7   &kp F8   &kp F9   &kp F10  &kp F11 &mt RGUI F12
          &mt LCTRL PLUS &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT        &kp CARET &kp AMPS &kp STAR &kp LPAR &kp RPAR &mt RCTRL MINUS
          &mt LALT EQUAL &kp N1   &kp N2 &kp N3   &kp N4   &kp N5           &kp N6    &kp N7   &kp N8   &kp N9   &kp N0   &trans
                                              &lt ADJ TAB &trans &trans   &trans &trans &lt ADJ DEL
                        >;
                };
                gm_layer {
                        bindings = <
   &kp ESC &lt GM_A GRAVE    &kp Q   &kp W &kp E &kp R &kp T            &kp Y &kp U &kp I     &kp O     &kp P         &kp F3 &trans
           &kp LSHIFT        &kp A   &kp S &kp D &kp F &kp G            &kp H &kp J &kp K     &kp L     &kp RCTRL     &to DEF
           &kp LCTRL         &kp Z   &kp X &kp C &kp V &kp B            &kp N &kp M &kp COMMA &kp KP_DOT   &none   &trans
                                  &kp LALT &kp TAB &kp SPACE            &lt LWR ESC &mt RSHFT BSPC &lt RSE DEL
                        >;
                };
                gm_add_layer {
                        bindings = <
   &kp ESC &kp GRAVE     &kp N1   &kp W &kp N2 &kp N3 &kp N4        &kp Y &kp U &kp I     &kp O     &kp P         &kp F3 &kp LA(F4)
           &kp LSHIFT    &kp A   &kp S &kp D &kp F &kp F3            &kp H &kp J &kp K     &kp L     &kp RCTRL     &to DEF
           &kp LCTRL     &kp Z   &kp X &kp C &kp N &kp M            &kp N &kp M &kp COMMA &kp KP_DOT   &none   &trans
                              &kp LALT &kp TAB &kp SPACE            &none  &to DEF &trans
                        >;
                };
                 code_layer {
                        bindings = <
   &kp ESC &kp BACKSPACE  &kp Q   &kp W &kp E &kp R &kp T            &kp Y &kp U &kp I     &kp O     &kp P         &kp LBKT &kp RBKT
           &kp LSHFT      &kp A   &kp S &kp D &kp F &kp G            &kp H &kp J &kp K     &kp L     &kp SEMI     &kp SQT
           &kp LCTRL      &kp Z   &kp X &kp C &kp V &kp B            &kp N &kp M &kp COMMA &kp DOT   &kp FSLH   &kp BSLH
                            &kp DOWN &kp UP &lt RSE ENTER            &lt RSE SPACE  &kp LEFT &kp RIGHT
                        >;
                };
                raise_layer {
                        bindings = <
   &kp LG(GRAVE) &kp TAB    &kp SLASH    &kp N7 &kp N8 &kp N9 &kp MINUS        &kp C_VOL_UP &kp LC(F5) &kp LC(PSCRN) &kp PG_UP &kp F3 &kp DEL &trans
          &mt LCTRL EQUAL       &kp STAR &kp N4 &kp N5 &kp N6 &kp PLUS         &kp C_MUTE   &kp LEFT &kp LPAR  &kp RPAR &kp PIPE  &mt RCTRL K_APP
          &kp LA(LSHIFT)        &kp N0   &kp N1 &kp N2 &kp N3 &kp KP_DOT       &kp C_VOL_DN &kp END  &kp LBRC  &kp RBRC &kp AMPS &kp LA(F4) 
                                        &kp LSHFT &kp LA(TAB) &lt ADJ RET    &lt ADJ ESC &trans &lt ADJ RIGHT
                        >;
                };
                adjust_layer {
                        bindings = <
   &reset &bootloader  &rgb_ug RGB_TOG  &rgb_ug RGB_EFF &rgb_ug RGB_HUI   &rgb_ug RGB_HUD  &rgb_ug RGB_SAI         &rgb_ug RGB_SAD  &rgb_ug RGB_BRI  &rgb_ug RGB_BRD   &rgb_ug RGB_SPI   &rgb_ug RGB_SPD  &bootloader &reset
          &bt BT_CLR   &bt BT_SEL 0     &bt BT_SEL 1    &bt BT_SEL 2      &bt BT_SEL 3     &bt BT_SEL 4            &bt BT_SEL 4     &bt BT_SEL 3     &bt BT_SEL 2      &bt BT_SEL 1      &bt BT_SEL 0     &bt BT_CLR
          &none        &none             &none          &to DEF             &to CODE           &out OUT_TOG            &out OUT_TOG     &to CODE            &none             &none             &none            &none
                                                        &trans            &to GM         &trans             &trans           &to GM     &trans
                        >;
                };
        };
};